syntax = "proto3";
package metapb;

message Cluster {
    uint64 id = 1;
    // max peer count for a region.
    // scheduler will do the auto-balance if region peer count mismatches.
    uint32 max_peer_count = 2;
    // more ...
}

enum StoreState {
    Up = 0;
    Offline = 1;
    Tomstone = 2;
}

message Store {
    uint64 id = 1;
    // address to handle client requests (kv, cop, etc.)
    string address = 2;
    StoreState state = 3;
}

message RegionEpoch {
    // config change version, auto-incremented when peer is added or removed.
    uint64 config_version = 1;
    // region version, auto-increnented when region is split or merged.
    uint64 version  = 2;
}

message Region {
    uint64 id = 1;
    // Region key range [start_key, end_key).
    bytes start_key = 2;
    bytes end_key = 3;
    RegionEpoch region_epoch = 4;
    repeated Peer peers = 5;
}

message Peer {
    uint64 id = 1;
    uint64 store_id = 2;
}
